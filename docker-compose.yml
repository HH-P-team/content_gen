version: "3.8"

services:
  db:
    container_name: ${POSTGRES_HOST}
    image: postgres:latest
    env_file:
     - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_NAME}
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    ports:
      - 5432:${POSTGRES_PORT}
    networks:
      - backend
      
  api:
    container_name: api
    build: 
      context: ./
      dockerfile: ./backend/Dockerfile
    env_file:
       - .env
    volumes:
      - ./commons:/opt/app/commons
      - ./staticfiles:/opt/app/staticfiles
    depends_on:
      - db
    ports:
      - 8000:8000
    networks:
      - backend
      - frontend

  front:
    container_name: front
    build: ./frontend/
    env_file:
       - .env
    depends_on:
      - api
    ports:
      - 8080:3000
    networks:
      - frontend

networks:
  backend:
    driver: bridge

  frontend:
    driver: bridge

